<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jr.erp.sys.dao.SysPurchaseColumnMapper">
  <resultMap id="BaseResultMap" type="com.jr.erp.sys.entity.SysPurchaseColumn">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="companyNo" jdbcType="VARCHAR" property="companyNo" />
    <result column="dbColumn" jdbcType="VARCHAR" property="dbColumn" />
    <result column="beanColumn" jdbcType="VARCHAR" property="beanColumn" />
    <result column="showName" jdbcType="VARCHAR" property="showName" />
    <result column="paramType" jdbcType="TINYINT" property="paramType" />
    <result column="digits" jdbcType="TINYINT" property="digits" />
    <result column="baseClassKey" jdbcType="VARCHAR" property="baseClassKey" />
    <result column="mustColumn" jdbcType="TINYINT" property="mustColumn" />
    <result column="orderColumn" jdbcType="INTEGER" property="orderColumn" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, companyNo, dbColumn, beanColumn, showName, paramType, digits, baseClassKey, mustColumn, 
    orderColumn
  </sql>
  <select id="selectByExample" parameterType="com.jr.erp.sys.entity.SysPurchaseColumnExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_purchase_column
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="page != null">
      <if test="limit != null">
        limit ${(page-1)*limit}, ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_purchase_column
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_purchase_column
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jr.erp.sys.entity.SysPurchaseColumnExample">
    delete from sys_purchase_column
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jr.erp.sys.entity.SysPurchaseColumn">
    insert into sys_purchase_column (Id, companyNo, dbColumn, 
      beanColumn, showName, paramType, 
      digits, baseClassKey, mustColumn, 
      orderColumn)
    values (#{id,jdbcType=INTEGER}, #{companyNo,jdbcType=VARCHAR}, #{dbColumn,jdbcType=VARCHAR}, 
      #{beanColumn,jdbcType=VARCHAR}, #{showName,jdbcType=VARCHAR}, #{paramType,jdbcType=TINYINT}, 
      #{digits,jdbcType=TINYINT}, #{baseClassKey,jdbcType=VARCHAR}, #{mustColumn,jdbcType=TINYINT}, 
      #{orderColumn,jdbcType=INTEGER})
  </insert>
  <select id="countByExample" parameterType="com.jr.erp.sys.entity.SysPurchaseColumnExample" resultType="java.lang.Long">
    select count(*) from sys_purchase_column
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.jr.erp.sys.entity.SysPurchaseColumn">
    update sys_purchase_column
    <set>
      <if test="companyNo != null">
        companyNo = #{companyNo,jdbcType=VARCHAR},
      </if>
      <if test="dbColumn != null">
        dbColumn = #{dbColumn,jdbcType=VARCHAR},
      </if>
      <if test="beanColumn != null">
        beanColumn = #{beanColumn,jdbcType=VARCHAR},
      </if>
      <if test="showName != null">
        showName = #{showName,jdbcType=VARCHAR},
      </if>
      <if test="paramType != null">
        paramType = #{paramType,jdbcType=TINYINT},
      </if>
      <if test="digits != null">
        digits = #{digits,jdbcType=TINYINT},
      </if>
      <if test="baseClassKey != null">
        baseClassKey = #{baseClassKey,jdbcType=VARCHAR},
      </if>
      <if test="mustColumn != null">
        mustColumn = #{mustColumn,jdbcType=TINYINT},
      </if>
      <if test="orderColumn != null">
        orderColumn = #{orderColumn,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jr.erp.sys.entity.SysPurchaseColumn">
    update sys_purchase_column
    set companyNo = #{companyNo,jdbcType=VARCHAR},
      dbColumn = #{dbColumn,jdbcType=VARCHAR},
      beanColumn = #{beanColumn,jdbcType=VARCHAR},
      showName = #{showName,jdbcType=VARCHAR},
      paramType = #{paramType,jdbcType=TINYINT},
      digits = #{digits,jdbcType=TINYINT},
      baseClassKey = #{baseClassKey,jdbcType=VARCHAR},
      mustColumn = #{mustColumn,jdbcType=TINYINT},
      orderColumn = #{orderColumn,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>