<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jr.erp.bill.stocktake.dao.BillStocktakeMapper">
  <resultMap id="BaseResultMap" type="com.jr.erp.bill.stocktake.entity.BillStocktake">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="companyNo" jdbcType="VARCHAR" property="companyNo" />
    <result column="sysBillNo" jdbcType="VARCHAR" property="sysBillNo" />
    <result column="billNo" jdbcType="VARCHAR" property="billNo" />
    <result column="billDate" jdbcType="VARCHAR" property="billDate" />
    <result column="areaCode" jdbcType="VARCHAR" property="areaCode" />
    <result column="areaName" jdbcType="VARCHAR" property="areaName" />
    <result column="canViewAll" jdbcType="TINYINT" property="canViewAll" />
    <result column="counterAreaCode" jdbcType="VARCHAR" property="counterAreaCode" />
    <result column="counterAreaName" jdbcType="VARCHAR" property="counterAreaName" />
    <result column="productName" jdbcType="VARCHAR" property="productName" />
    <result column="assignTaker" jdbcType="TINYINT" property="assignTaker" />
    <result column="bookNum" jdbcType="INTEGER" property="bookNum" />
    <result column="checkNum" jdbcType="INTEGER" property="checkNum" />
    <result column="billStatus" jdbcType="TINYINT" property="billStatus" />
    <result column="createUserId" jdbcType="INTEGER" property="createUserId" />
    <result column="createUserName" jdbcType="VARCHAR" property="createUserName" />
    <result column="createTime" jdbcType="VARCHAR" property="createTime" />
    <result column="finishTime" jdbcType="VARCHAR" property="finishTime" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, companyNo, sysBillNo, billNo, billDate, areaCode, areaName, canViewAll, counterAreaCode, 
    counterAreaName, productName, assignTaker, bookNum, checkNum, billStatus, createUserId, 
    createUserName, createTime, finishTime, remarks
  </sql>
  <select id="selectByExample" parameterType="com.jr.erp.bill.stocktake.entity.BillStocktakeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bill_stocktake
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="page != null">
      <if test="limit != null">
        limit ${(page-1)*limit}, ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bill_stocktake
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bill_stocktake
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jr.erp.bill.stocktake.entity.BillStocktakeExample">
    delete from bill_stocktake
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jr.erp.bill.stocktake.entity.BillStocktake">
    insert into bill_stocktake (id, companyNo, sysBillNo, 
      billNo, billDate, areaCode, 
      areaName, canViewAll, counterAreaCode, 
      counterAreaName, productName, assignTaker, 
      bookNum, checkNum, billStatus, 
      createUserId, createUserName, createTime, 
      finishTime, remarks)
    values (#{id,jdbcType=INTEGER}, #{companyNo,jdbcType=VARCHAR}, #{sysBillNo,jdbcType=VARCHAR}, 
      #{billNo,jdbcType=VARCHAR}, #{billDate,jdbcType=VARCHAR}, #{areaCode,jdbcType=VARCHAR}, 
      #{areaName,jdbcType=VARCHAR}, #{canViewAll,jdbcType=TINYINT}, #{counterAreaCode,jdbcType=VARCHAR}, 
      #{counterAreaName,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, #{assignTaker,jdbcType=TINYINT}, 
      #{bookNum,jdbcType=INTEGER}, #{checkNum,jdbcType=INTEGER}, #{billStatus,jdbcType=TINYINT}, 
      #{createUserId,jdbcType=INTEGER}, #{createUserName,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{finishTime,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <select id="countByExample" parameterType="com.jr.erp.bill.stocktake.entity.BillStocktakeExample" resultType="java.lang.Long">
    select count(*) from bill_stocktake
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bill_stocktake
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companyNo != null">
        companyNo = #{record.companyNo,jdbcType=VARCHAR},
      </if>
      <if test="record.sysBillNo != null">
        sysBillNo = #{record.sysBillNo,jdbcType=VARCHAR},
      </if>
      <if test="record.billNo != null">
        billNo = #{record.billNo,jdbcType=VARCHAR},
      </if>
      <if test="record.billDate != null">
        billDate = #{record.billDate,jdbcType=VARCHAR},
      </if>
      <if test="record.areaCode != null">
        areaCode = #{record.areaCode,jdbcType=VARCHAR},
      </if>
      <if test="record.areaName != null">
        areaName = #{record.areaName,jdbcType=VARCHAR},
      </if>
      <if test="record.canViewAll != null">
        canViewAll = #{record.canViewAll,jdbcType=TINYINT},
      </if>
      <if test="record.counterAreaCode != null">
        counterAreaCode = #{record.counterAreaCode,jdbcType=VARCHAR},
      </if>
      <if test="record.counterAreaName != null">
        counterAreaName = #{record.counterAreaName,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null">
        productName = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.assignTaker != null">
        assignTaker = #{record.assignTaker,jdbcType=TINYINT},
      </if>
      <if test="record.bookNum != null">
        bookNum = #{record.bookNum,jdbcType=INTEGER},
      </if>
      <if test="record.checkNum != null">
        checkNum = #{record.checkNum,jdbcType=INTEGER},
      </if>
      <if test="record.billStatus != null">
        billStatus = #{record.billStatus,jdbcType=TINYINT},
      </if>
      <if test="record.createUserId != null">
        createUserId = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createUserName != null">
        createUserName = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.finishTime != null">
        finishTime = #{record.finishTime,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bill_stocktake
    set id = #{record.id,jdbcType=INTEGER},
      companyNo = #{record.companyNo,jdbcType=VARCHAR},
      sysBillNo = #{record.sysBillNo,jdbcType=VARCHAR},
      billNo = #{record.billNo,jdbcType=VARCHAR},
      billDate = #{record.billDate,jdbcType=VARCHAR},
      areaCode = #{record.areaCode,jdbcType=VARCHAR},
      areaName = #{record.areaName,jdbcType=VARCHAR},
      canViewAll = #{record.canViewAll,jdbcType=TINYINT},
      counterAreaCode = #{record.counterAreaCode,jdbcType=VARCHAR},
      counterAreaName = #{record.counterAreaName,jdbcType=VARCHAR},
      productName = #{record.productName,jdbcType=VARCHAR},
      assignTaker = #{record.assignTaker,jdbcType=TINYINT},
      bookNum = #{record.bookNum,jdbcType=INTEGER},
      checkNum = #{record.checkNum,jdbcType=INTEGER},
      billStatus = #{record.billStatus,jdbcType=TINYINT},
      createUserId = #{record.createUserId,jdbcType=INTEGER},
      createUserName = #{record.createUserName,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=VARCHAR},
      finishTime = #{record.finishTime,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jr.erp.bill.stocktake.entity.BillStocktake">
    update bill_stocktake
    <set>
      <if test="companyNo != null">
        companyNo = #{companyNo,jdbcType=VARCHAR},
      </if>
      <if test="sysBillNo != null">
        sysBillNo = #{sysBillNo,jdbcType=VARCHAR},
      </if>
      <if test="billNo != null">
        billNo = #{billNo,jdbcType=VARCHAR},
      </if>
      <if test="billDate != null">
        billDate = #{billDate,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null">
        areaCode = #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="areaName != null">
        areaName = #{areaName,jdbcType=VARCHAR},
      </if>
      <if test="canViewAll != null">
        canViewAll = #{canViewAll,jdbcType=TINYINT},
      </if>
      <if test="counterAreaCode != null">
        counterAreaCode = #{counterAreaCode,jdbcType=VARCHAR},
      </if>
      <if test="counterAreaName != null">
        counterAreaName = #{counterAreaName,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        productName = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="assignTaker != null">
        assignTaker = #{assignTaker,jdbcType=TINYINT},
      </if>
      <if test="bookNum != null">
        bookNum = #{bookNum,jdbcType=INTEGER},
      </if>
      <if test="checkNum != null">
        checkNum = #{checkNum,jdbcType=INTEGER},
      </if>
      <if test="billStatus != null">
        billStatus = #{billStatus,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null">
        createUserId = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createUserName != null">
        createUserName = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="finishTime != null">
        finishTime = #{finishTime,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jr.erp.bill.stocktake.entity.BillStocktake">
    update bill_stocktake
    set companyNo = #{companyNo,jdbcType=VARCHAR},
      sysBillNo = #{sysBillNo,jdbcType=VARCHAR},
      billNo = #{billNo,jdbcType=VARCHAR},
      billDate = #{billDate,jdbcType=VARCHAR},
      areaCode = #{areaCode,jdbcType=VARCHAR},
      areaName = #{areaName,jdbcType=VARCHAR},
      canViewAll = #{canViewAll,jdbcType=TINYINT},
      counterAreaCode = #{counterAreaCode,jdbcType=VARCHAR},
      counterAreaName = #{counterAreaName,jdbcType=VARCHAR},
      productName = #{productName,jdbcType=VARCHAR},
      assignTaker = #{assignTaker,jdbcType=TINYINT},
      bookNum = #{bookNum,jdbcType=INTEGER},
      checkNum = #{checkNum,jdbcType=INTEGER},
      billStatus = #{billStatus,jdbcType=TINYINT},
      createUserId = #{createUserId,jdbcType=INTEGER},
      createUserName = #{createUserName,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=VARCHAR},
      finishTime = #{finishTime,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>